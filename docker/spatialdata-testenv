# docker build --build-arg BASE_IMAGE=${VARIABLE_NAME} --build-arg TEST_COVERAGE=yes/no --build-arg PYTHON_COVERAGE=${COVERAGE_EXECUTABLE} -f DOCKERFILE . -t IMAGE_NAME .

# BUILD CIG DEPENDENCIES ----------
ARG BASE_IMAGE
from ${BASE_IMAGE} as base
ARG TEST_COVERAGE=no
ARG PYTHON_COVERAGE=coverage3
ENV TEST_COVERAGE=${TEST_COVERAGE} PYTHON_COVERAGE=${PYTHON_COVERAGE} 

LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"

USER ${PYLITH_USER}
ENV TOP_DIR /home/${PYLITH_USER}

RUN mkdir -p ${TOP_DIR}/src
ENV PREFIX_DIR /opt/pylith/cig
ENV PATH ${PATH}:${PREFIX_DIR}/bin
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${PREFIX_DIR}/lib:${PREFIX_DIR}/lib64
ENV PYTHONPATH ${PYTHONPATH}:${PREFIX_DIR}/lib/python${PYTHON_VERSION}/site-packages:${PREFIX_DIR}/lib64/python${PYTHON_VERSION}/site-packages


# Pythia ----------
RUN mkdir -p ${PREFIX_DIR}/lib/python${PYTHON_VERSION}/site-packages
ENV SRC_DIR $TOP_DIR/src/pythia
ENV BUILD_DIR $TOP_DIR/build/pythia
RUN mkdir -p ${BUILD_DIR}

RUN git clone --depth 1 --recursive https://github.com/geodynamics/pythia.git ${SRC_DIR}
WORKDIR ${SRC_DIR}
RUN autoreconf --install --verbose
WORKDIR ${BUILD_DIR}
RUN ${SRC_DIR}/configure --enable-testing --prefix=${PREFIX_DIR} CPPFLAGS=-I${PREFIX_DIR} && make && make install && make check VERBOSE=1


# SPATIALDATA ----------
from base as src

# Copy source code
ENV BUILD_DIR ${TOP_DIR}/build/spatialdata
ENV SRC_DIR ${TOP_DIR}/src/spatialdata

COPY --chown=pylith-user:pylith-user . ${SRC_DIR}
WORKDIR ${SRC_DIR}
RUN autoreconf --install --verbose --force

RUN mkdir -p ${BUILD_DIR}
WORKDIR ${BUILD_DIR}
RUN ${SRC_DIR}/configure --prefix=${PREFIX_DIR} --enable-swig --enable-testing --enable-test-coverage=${TEST_COVERAGE} --with-python-coverage=${PYTHON_COVERAGE} CPPFLAGS="-I/opt/pylith/dependencies/include -I${TOP_DIR}/dependencies/include" LDFLAGS="-L/opt/pylith/dependencies/lib -L${TOP_DIR}/dependencies/lib --coverage" CXXFLAGS="-g -O --coverage"

WORKDIR ${SRC_DIR}

# TESTING ----------
from src as test

WORKDIR ${BUILD_DIR}/build/pythia
RUN make -j$(nproc) install && make -j$(nproc) check VERBOSE=1
RUN make coverage-libtests
RUN make coverage-pytests

CMD /bin/bash
