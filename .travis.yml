# Travis-CI configuration

sudo: true
services:
    - docker

language: cpp

# :TODO: @brad Add osx build (need homebrew packages)..
matrix:
  include:
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-debian-stable-gcc8
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-debian-testing-gcc9
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-ubuntu-18.04
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-ubuntu-19.10
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-ubuntu-20.04
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-fedora-30
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-fedora-31
    - os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-fedora-32

#    - os: linux
#      env: BASE_IMAGE=geodynamics/pylith-testenv-debian-testing-clang8
#    - os: linux
#      env: BASE_IMAGE=geodynamics/pylith-testenv-debian-testing-clang9
#    - os: linux
#      env: BASE_IMAGE=geodynamics/pylith-testenv-centos-6
#    - os: linux
#      env: BASE_IMAGE=geodynamics/pylith-testenv-centos-7


addons:
  apt:
    packages:
      - docker-ce


# Limit number of commits in cloning (but keep enough so that 'git describe' works)
git:
  depth: 100


install:
  - docker build -t spatialdata-testenv --build-arg BASE_IMAGE=$BASE_IMAGE --target src -f docker/spatialdata-testenv .


script: 
  - ci_env=`bash <(curl -s https://codecov.io/env)`
  - docker run $ci_env spatialdata-testenv ../src/ci-config/run_test_coverage.sh