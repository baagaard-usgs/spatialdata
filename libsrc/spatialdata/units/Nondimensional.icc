// -*- C++ -*-
//
// ----------------------------------------------------------------------
//
// Brad T. Aagaard, U.S. Geological Survey
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010-2017 University of California, Davis
//
// See COPYING for license information.
//
// ----------------------------------------------------------------------
//

#if !defined(spatialdata_units_nondimensional_hh)
#error "Nondimensional.icc must only be included from Nondimensional.hh"
#endif

#include <assert.h> // USES assert()

// Get value to nondimensionalize length scale in meters (SI units).
inline
double
spatialdata::units::Nondimensional::lengthScale(void) const {
  return _length;
}

// Get value to nondimensionalize pressure scale in Pascals (SI units).
inline
double
spatialdata::units::Nondimensional::pressureScale(void) const {
  return _pressure;
}

// Get value to nondimensionalize time scale in seconds (SI units).
inline
double
spatialdata::units::Nondimensional::timeScale(void) const {
  return _time;
}

// Get value to nondimensionalize density scale in kg/m^3 (SI units).
inline
double
spatialdata::units::Nondimensional::densityScale(void) const {
  return _density;
}

// Get value to nondimensionalize temperature scale in Kelvin (SI units).
inline
double
spatialdata::units::Nondimensional::temperatureScale(void) const {
  return _temperature;
}

// Make value dimensionless.
inline
double
spatialdata::units::Nondimensional::nondimensionalize(const double value,
						      const double scale) const {
  return value / scale;
}

// Make values dimensionless.
inline
void
spatialdata::units::Nondimensional::nondimensionalize(double* const values,
						      const int nvalues,
						      const double scale) const
{ // nondimensionalize
  assert( (0 < nvalues && 0 != values) ||
	  (0 == nvalues && 0 == values) );

  for (int i=0; i < nvalues; ++i)
    values[i] /= scale;
} // nondimensionalize

// Make values dimensionless.
inline
void
spatialdata::units::Nondimensional::nondimensionalize(float* const values,
						      const int nvalues,
						      const double scale) const
{ // nondimensionalize
  assert( (0 < nvalues && 0 != values) ||
	  (0 == nvalues && 0 == values) );

  for (int i=0; i < nvalues; ++i)
    values[i] /= scale;
} // nondimensionalize

// Make value dimensionless.
inline
double
spatialdata::units::Nondimensional::dimensionalize(const double value,
						   const double scale) const {
  return value * scale;
}

// Make value dimensionless.
inline
void
spatialdata::units::Nondimensional::dimensionalize(double* const values,
						   const int nvalues,
						   const double scale) const
{ // dimensionalize
  assert( (0 < nvalues && 0 != values) ||
	  (0 == nvalues && 0 == values) );

  for (int i=0; i < nvalues; ++i)
    values[i] *= scale;
} // dimensionalize


// Make value dimensionless.
inline
void
spatialdata::units::Nondimensional::dimensionalize(float* const values,
						   const int nvalues,
						   const double scale) const
{ // dimensionalize
  assert( (0 < nvalues && 0 != values) ||
	  (0 == nvalues && 0 == values) );

  for (int i=0; i < nvalues; ++i)
    values[i] *= scale;
} // dimensionalize


// End of file 
