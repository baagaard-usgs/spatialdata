#!/usr/bin/env python
#
# ======================================================================
#
#                           Brad T. Aagaard
#                        U.S. Geological Survey
#
# {LicenseText}
#
# ======================================================================
#
## @file geocoords/tests/libtests/data/csgeoproj.odb
## @brief Python data generator for csgeoproj tests.

from Numeric import ravel

def data():
  """Factory method for facility data."""
  return CSGeoProj()

from ConvertData import ConvertData

# CSGeoProj class
class CSGeoProj(ConvertData):
  """Python data generator for projector tests."""


  def calculate(self):
    """Calculate original and converted coordinates."""

    self.ellipsoid = "clrk66"
    self.datumHoriz = "NAD27"
    self.datumVert = "mean sea level"
    self.projection = "tmerc"
    self.falseEasting = -100.0
    self.falseNorthing = 30.0
    self.scaleFactor = 0.9996
    self.units = "km"
    self._command = "proj +proj=%s +datum=%s +ellps=%s " \
                    "+lon_0=%f +lat_0=%f +k=%f " \
                    "+units=%s -f %s" % \
                    (self.projection, self.datumHoriz, self.ellipsoid,
                     self.falseEasting, self.falseNorthing,
                     self.scaleFactor, self.units, "%.5f")
    self.lonlatelev = [ [-115.000000,  39.00000, 12.0],
                        [-120.342532,  43.23423, 4.7],
                        [-121.342532,  45.23423, 13.4],
                        [-115.342532,  36.23423, 7.34],
                        [-110.342532,  39.23423, 65.3],
                        [-107.342532,  33.23423, 2.3] ]
    self.xyz = self._convert(self.lonlatelev)

    return


  def dump(self, dumper):
    """Dump data."""
    dumper.open(self.name)
    dumper.writeVal("char*", "_ELLIPSOID", self.ellipsoid, "\"%s\"")
    dumper.writeVal("char*", "_DATUMHORIZ", self.datumHoriz, "\"%s\"")
    dumper.writeVal("char*", "_DATUMVERT", self.datumVert, "\"%s\"")
    dumper.writeVal("char*", "_PROJECTION", self.projection, "\"%s\"")
    dumper.writeVal("double", "_FALSEEASTING", self.falseEasting, "%20.12e")
    dumper.writeVal("double", "_FALSENORTHING", self.falseNorthing, "%20.12e")
    dumper.writeVal("double", "_SCALEFACTOR", self.scaleFactor, "%20.12e")
    dumper.writeVal("char*", "_UNITS", self.units, "\"%s\"")
    dumper.writeVal("int", "_NUMLOCS", len(self.lonlatelev), "%d")
    dumper.writeArray("double", "_LONLATNAD27ELEV", ravel(self.lonlatelev),
                      "%20.12e,", 3)
    dumper.writeArray("double", "_XYZ", ravel(self.xyz), "%20.12e,", 3)
    dumper.close()
    return


  def __init__(self):
    """Constructor."""
    ConvertData.__init__(self, name='projector')
    self._fileSrc = "src.dat"
    self._fileDest = "dest.dat"
    return

# version
__id__ = "$Id: projector.odb,v 1.1 2005/05/25 17:30:21 baagaard Exp $"

# End of file 
